{"version":3,"sources":["components/Currency.js","store/actions/currency-actions.js","components/ThemeSwitch.js","context.js","components/Column.js","components/ImageWithFallback.js","components/Product.js","containers/ProductList.js","Demo/Demo.js","components/ErrorPage.js","containers/Checkout.js","store/actions/user-actions.js","containers/Login.js","components/PrivateRoute.js","AppRouter.js","components/Menu.js","containers/Header.js","App.js","serviceWorker.js","store/reducers/currency-reducer.js","store/reducers/user-reducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["Currency","style","padding","margin","float","onChange","event","props","currencyChange","target","value","map","item","key","React","Component","connect","dispatch","code","type","updateCurr","propType","PropTypes","func","isRequired","ThemeSwitch","useState","theme","switchTheme","useEffect","document","body","className","onClick","changeTheme","ThemeContext","createContext","Column","useContext","cls","colSize","children","ImageWithFallback","source","imgSrc","updateImage","src","height","width","onError","alt","PropType","string","Product","productStyle","borderRadius","border","imageStyle","stock","wishlist","btnClick","this","pData","productImage","productName","productPrice","renderStock","productStock","ProductList","state","pList","getData","Axios","get","then","res","console","log","data","setState","catch","err","history","push","x","productId","currentCode","addItem","currencyCode","storeData","currency","Demo","context","contextType","ErrorPage","col","Checkout","name","emailRef","e","preventDefault","onSubmit","saveData","ref","r","userActionTypes","Login","email","password","endpoint","post","loginSuccess","loginError","response","error","message","isLoggedIn","lastPage","location","from","to","doLogin","userSession","user","signInSuccess","isAuthenticated","LoadComponent","component","rest","render","pathname","AppRouter","path","exact","Menu","menuList","menuItem","index","menuLink","menuLabel","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","Provider","Boolean","window","hostname","match","currencyReducer","action","currencyActionType","UPDATE_CURRENCY","initialState","userReducer","rootReducer","combineReducers","appStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.148e2c30.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"   // prop validation\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurr } from \"../store/actions/currency-actions\";\r\n\r\nclass Currency extends React.Component {\r\n    render() {\r\n        const currencyCodes = ['INR', 'USD', 'GBP', 'EUR'];\r\n        return (\r\n            <select style={{ padding: '5px', margin: '20px', float: 'right' }} onChange={(event) => this.props.currencyChange(event.target.value)}>\r\n                {\r\n                    currencyCodes.map(item => <option key={item}> {item} </option>)\r\n                }\r\n            </select >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// connect(what to retrieve, what to modify/change)(component)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        currencyChange: (code) => dispatch(updateCurr(code)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Currency);\r\n\r\n\r\nCurrency.propType = {\r\n    currencyChange: PropTypes.func.isRequired\r\n}","export const updateCurr = (code) => {\r\n    return {\r\n        type: \"[Currency] Update Currency\",  // mandatory\r\n        code,  // additional payload (optional)\r\n    };\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ThemeSwitch(props) {\r\n    let [theme, switchTheme] = React.useState('light');\r\n    \r\n    //useEffect----------- mount, unmount, update\r\n    React.useEffect(() => {\r\n        document.body.className = 'bg-' + theme;\r\n    });\r\n\r\n\r\n    if (theme === 'light') {\r\n        return (\r\n            <i className=\"fas fa-moon text-dark fa-2x\" style={{\r\n                float: 'right',\r\n                padding: '20px'\r\n            }} onClick={() => {\r\n                switchTheme('dark')\r\n                props.changeTheme('dark')\r\n            }}></i >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <i className=\"fas fa-sun text-warning fa-2x\" style={{\r\n            float: 'right',\r\n            padding: '20px'\r\n        }} onClick={() => {\r\n            switchTheme('light')\r\n            props.changeTheme('light')\r\n        }}></i >\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ThemeSwitch;\r\nThemeSwitch.propTypes = {\r\n    changeTheme: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ThemeContext = React.createContext('light');","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeContext } from \"../context\";\r\n\r\nfunction Column(props) {\r\n\r\n    //use context to access the context data\r\n    const theme = React.useContext(ThemeContext);\r\n\r\n    const size = 12 / props.colSize;\r\n    let cls = 'col-md-' + size;\r\n\r\n    cls += theme === 'light' ? ' text-dark' : ' text-light';\r\n\r\n    return (\r\n        <div className={cls}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column;\r\nColumn.propTypes = {\r\n    colSize: PropTypes.number\r\n}\r\n","import React from \"react\";\r\nimport PropType from \"prop-types\"\r\nfunction ImageWithFallback(props) {\r\n\r\n    //use state in functional component \r\n    let [imgSrc, updateImage] = React.useState(props.source)\r\n\r\n    return (\r\n        <img src={imgSrc}\r\n            style={{ height: '250px', width: '250px' }}\r\n            onError={() => updateImage('/logo512.png')}\r\n            className=\"img-thumbnail\" alt=\"ptoduct\"\r\n        />\r\n    )\r\n\r\n}\r\nexport default ImageWithFallback;\r\nImageWithFallback.propType = {\r\n    source: PropType.string.isRequired\r\n}","\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"   // prop validation\r\nimport Column from \"./Column\";\r\nimport ImageWithFallback from \"./ImageWithFallback\";\r\nclass Product extends React.Component {\r\n\r\n    renderStock(stock, wishlist) {\r\n        if (stock) {\r\n            return (\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={() => this.props.btnClick()}>\r\n                    Add to {wishlist ? 'wishlist' : 'cart'}\r\n                </button>);\r\n        } else {\r\n            return (<p>Out Of Stock</p>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //const pData = this.props.pData;\r\n        const { pData, wishlist, code } = this.props; //destructuring\r\n        return (\r\n            <Column colSize={4} >\r\n\r\n                <div style={this.productStyle}>\r\n                    {/* <img style={this.imageStyle} src={pData.productImage} alt=\"product\" onError={(ev) => ev.target.src = '/logo192.png'} /> */}\r\n                    <ImageWithFallback source={pData.productImage}></ImageWithFallback>\r\n                    <h2>{pData.productName}</h2>\r\n                    <h5> {code}{pData.productPrice}</h5>\r\n                    <div>\r\n                        {this.renderStock(pData.productStock, wishlist)}\r\n                    </div>\r\n                </div>\r\n\r\n            </Column>\r\n        );\r\n    }\r\n\r\n\r\n    productStyle = {\r\n        padding: '5px',\r\n        margin: '5px',\r\n        borderRadius: '3px',\r\n        border: '1px solid gray'\r\n    }\r\n    imageStyle = {\r\n        height: '220px',\r\n        width: '220px',\r\n        borderRadius: '3px',\r\n    }\r\n\r\n}\r\n\r\nexport default Product;\r\n//prop validation\r\nProduct.propTypes = {\r\n    pData: PropTypes.object.isRequired,\r\n    wishlist: PropTypes.bool\r\n}","import React from \"react\"\r\nimport \"./ProductList.css\"\r\nimport Product from \"../components/Product\"\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProductList extends React.Component {\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    state = { pList: [] }\r\n    getData() {\r\n        const url = 'https://raw.githubusercontent.com/mdmoin7/Random-Products-Json-Generator/master/products.json';\r\n        Axios.get(url).then(res => {\r\n            console.log('success', res.data);\r\n            this.setState({ pList: res.data })\r\n        }).catch(err => console.log('falure', err));\r\n    }\r\n    addItem() {\r\n        //add to cart logic\r\n        // navigate to cart logic\r\n\r\n        this.props.history.push('/cart')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.pList.map(x => <Product pData={x} key={x.productId} code={this.props.currentCode} btnClick={() => this.addItem()} />)}\r\n\r\n                {this.state.pList[0] ? <Product pData={this.state.pList[1]} wishlist={true} code={this.props.currencyCode} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default ProductList;\r\n\r\n\r\nconst mapStoreDataToProps = (storeData) => {\r\n    return {\r\n        currentCode: storeData.currency\r\n    };\r\n};\r\n\r\n//connect(how to connect)(what to connect)\r\nexport default connect(mapStoreDataToProps)(ProductList);","import React from 'react';\r\nimport { ThemeContext } from '../context';\r\n\r\nclass Demo extends React.Component {\r\n\r\n    static contextType = ThemeContext; //Context api in class component\r\n\r\n    render() {\r\n        const name = 'Rohit';\r\n        return (\r\n            <div className={this.context === 'light' ? 'text-dark' : 'text-light'}>\r\n                <h2>E-commerce Website</h2>\r\n                <h5>Hello {name}</h5>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo;","import React from \"react\"\r\nimport Column from \"./Column\";\r\n//import { ThemeContext } from \"../context\";\r\n\r\nfunction ErrorPage(props) {\r\n\r\n    // const theme = React.useContext(ThemeContext);\r\n\r\n    return (\r\n        <Column col={4}>\r\n            <div className=\"align-center\">\r\n                <h1>404 Error</h1>\r\n                <p>Page not found</p>\r\n            </div>\r\n        </Column>\r\n    )\r\n\r\n}\r\nexport default ErrorPage;","import React from \"react\";\r\nimport Column from \"../components/Column\";\r\n\r\nclass Checkout extends React.Component {\r\n    state = { name: 'rohit' }\r\n    emailRef = null;\r\n    saveData(e) {\r\n        e.preventDefault();\r\n        console.log('test', this.state.name, this.emailRef.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Column colSize={1}>\r\n                <form className=\"container-fluid col-12 col-md-4\" onSubmit={(e) => this.saveData(e)}>\r\n                    <div className=\" form-group\">\r\n                        {/* controlled Component */}\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => this.setState({ name: e.target.value })} />\r\n                        {/* uncontrolled component */}\r\n                        <label>Email</label>\r\n                        <input type=\"text\" className=\"form-control\" ref={(r) => this.emailRef = r} />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Submit</button>\r\n\r\n\r\n                    {/* Router Params */}\r\n                    {/* for getting params (url/12345) */}\r\n                    {/* <div>{this.props.match.params.id}</div> */}\r\n                    {/* for getting query parameters (url?name:rohit&age:29) */}\r\n                    {/* <div>{this.props.location.search}</div> */}\r\n\r\n                </form>\r\n            </Column>\r\n        );\r\n    }\r\n}\r\nexport default Checkout;","export const userActionTypes = {\r\n    SIGN_IN_SUCCESS: '[User] Sign in success',\r\n    SIGN_IN_ERROR: '[User] Sign in error',\r\n    SIGN_OUT: '[User] Sign out'\r\n}\r\n\r\n\r\nexport const signInSuccess = (user) => {\r\n    return {\r\n        type: userActionTypes.SIGN_IN_SUCCESS,\r\n        user,\r\n    }\r\n}\r\n\r\n\r\nexport const signInError = (error) => {\r\n    return {\r\n        type: userActionTypes.SIGN_IN_ERROR,\r\n        error,\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: userActionTypes.SIGN_OUT\r\n    }\r\n}","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { signInSuccess, signInError } from \"../store/actions/user-actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Column from \"../components/Column\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = { email: '', password: '' }\r\n\r\n    doLogin(e) {\r\n        e.preventDefault();\r\n        const API_KEY = \"AIzaSyDWfrv25m9J6u-D-xl4xZ5TpvlPCtRWy4Q\"\r\n        const endpoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`\r\n        const data = { \"email\": this.state.email, \"password\": this.state.password, \"returnSecureToken\": true }\r\n\r\n        Axios.post(endpoint, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                this.props.loginSuccess(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.props.loginError(err.response.data.error.message);\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoggedIn) {\r\n            let lastPage = \"/\";\r\n            if (this.props.location.state && this.props.location.state.from) {\r\n                lastPage = this.props.location.state.from;\r\n            }\r\n            return <Redirect to={lastPage} />\r\n        }\r\n\r\n\r\n        return (\r\n            <Column colSize={1}>\r\n                <form className=\"container-fluid col-12 col-md-4\" onSubmit={(e) => this.doLogin(e)}>\r\n                    <div className=\" form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\"\r\n                            ref={(r) => this.emailRef = r}\r\n                            onChange={(e) => this.setState({ email: e.target.value })} />\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\"\r\n                            onChange={(e) => this.setState({ password: e.target.value })} />\r\n                    </div>\r\n                    <button className=\"btn btn-block btn-success\">Login</button>\r\n                </form >\r\n            </Column>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (storeData) => {\r\n    return {\r\n        isLoggedIn: !!storeData.userSession.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginSuccess: (user) => dispatch(signInSuccess(user)),\r\n        loginError: (err) => dispatch(signInError(err))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nfunction PrivateRoute({ component: LoadComponent, isAuthenticated, ...rest }) {\r\n    return (\r\n        <Route {...rest}\r\n            render={({ location }) => isAuthenticated ?\r\n                (<LoadComponent />) : (<Redirect to={{ pathname: \"/login\", state: { from: location.pathname } }} />)}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (storeData) => {\r\n    return {\r\n        isAuthenticated: !!storeData.userSession.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport ProductList from \"./containers/ProductList\";\r\nimport Demo from \"./Demo/Demo\";\r\nimport ErrorPage from \"./components/ErrorPage\";\r\nimport Checkout from \"./containers/Checkout\";\r\nimport Login from \"./containers/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nfunction AppRouter(props) {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" component={Demo} exact={true} />\r\n            <Route path=\"/products\" component={ProductList} />\r\n            <PrivateRoute path=\"/form/:id\" component={Checkout} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route component={ErrorPage} />\r\n        </Switch>\r\n    )\r\n}\r\nexport default AppRouter","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Menu(props) {\r\n    return (\r\n\r\n        <ul className=\"navbar-nav mr-auto\">\r\n            {props.menuList.map((menuItem, index) => (\r\n                <li className=\"nav-item\" key={index}>\r\n                    <NavLink className=\"nav-link\" to={menuItem.menuLink}>\r\n                        {menuItem.menuLabel}\r\n                    </NavLink>\r\n\r\n                </li>\r\n            ))}\r\n        </ul>\r\n\r\n    )\r\n\r\n}\r\nexport default Menu;\r\n\r\nMenu.propTypes = {\r\n    menuList: PropTypes.array\r\n}","import React from \"react\"\r\nimport Axios from \"axios\";\r\nimport Menu from \"../components/Menu\";\r\nimport { ThemeContext } from \"../context\";\r\n\r\nclass Header extends React.Component {\r\n    static contextType = ThemeContext;\r\n    state = { menuItem: [] };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await Axios.get('/menu.json');\r\n            const menuItem = res.data;\r\n            this.setState({ menuItem })\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     Axios.get('/menu.json').then(res => this.setState({ menuItem: res.data }))\r\n    // }\r\n\r\n    render() {\r\n        const theme = this.context ==='dark'\r\n            ? \"navbar-dark bg-dark\"\r\n            : \"navbar-light bg-light\";\r\n\r\n        return (\r\n\r\n            <nav className={\"navbar navbar-expand-lg \" + theme}>\r\n                <div className=\"navbar-brand\">E-Com</div>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <Menu menuList={this.state.menuItem} />\r\n                    {this.props.children}\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Currency from './components/Currency';\nimport ThemeSwitch from './components/ThemeSwitch';\nimport { ThemeContext } from './context';\nimport AppRouter from './AppRouter';\nimport Header from './containers/Header';\n\nclass App extends React.Component {\n  state = {\n    currency: 'INR',\n    theme: 'light'\n  }\n  render() {\n    // let currency = this.state.currency;\n    return (\n      <div className=\"App\">\n        <ThemeContext.Provider value={this.state.theme}>\n\n          <Header>\n            <Currency currencyChange={code => this.setState({ currency: code })} />\n            <ThemeSwitch changeTheme={(theme) => this.setState({ theme })} />\n          </Header>\n\n          <AppRouter />\n        </ThemeContext.Provider>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// function reducer(storeData, action)\r\n// state: initialize\r\n\r\nfunction currencyReducer(storeData = 'INR', action) {\r\n\r\n    switch (action.type) {\r\n        case currencyActionType.UPDATE_CURRENCY:\r\n            return action.code;\r\n        default:\r\n            return storeData; // current state\r\n    }\r\n\r\n}\r\nexport default currencyReducer;\r\n\r\nconst currencyActionType = {\r\n    UPDATE_CURRENCY: '[Currency] Update Currency'\r\n}","import { userActionTypes } from \"../actions/user-actions\";\r\n\r\nconst initialState = { user: null, error: null };\r\n\r\nfunction userReducer(storeData = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case userActionTypes.SIGN_IN_SUCCESS:\r\n            return { user: action.user, error: null }\r\n        case userActionTypes.SIGN_IN_ERROR:\r\n            return { user: null, error: action.error }\r\n        case userActionTypes.SIGN_OUT:\r\n            return initialState;\r\n        default:\r\n            return storeData;\r\n    }\r\n\r\n}\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport currencyReducer from \"./currency-reducer\";\r\nimport userReducer from \"./user-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    currency: currencyReducer,\r\n    userSession: userReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst appStore = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default appStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport appStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}